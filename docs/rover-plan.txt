Each rover has:
- A position
- A direction it's facing

Each rover can:
- Travel to specific coordinates
- Spin right or left by 90 degree increments
- Move forward one grid point in the direction it's facing:
	- N: (0, 1)
	- E: (1, 0)
	- S: (0, -1)
	- W: (-1, 0)



Commands are sent through a form. 

- Input set 1: establishing grid boundaries for all rovers
	- Should be input in 2 positive integers

- Input set 2: Rover 1's initial position and heading
	- Should be 2 positive integers within the grid boundaries (between 0 and the x and y boundaries), and 1 letter (N, E, S, W)
	- Rover needs to be able to take the letter and decode it into x and y movements

- Input set 3: Rover 1's movement instructions
	- Should ONLY consist of L, R, and M (upper or lowercase)
	- Rover 1 then transmits new position and heading back to NASA
		- Should be in xyz format

- (Input set 4: Rover 2's initial position and heading)
- (Input set 5: Rover 2's movement instructions, transmits back)
...and so on until the end of the input.



When the user clicks the button to submit their input:

- Validate input
	- Make sure starting x and y are within bounds of grid
	- Parse instructions
		- Line 1: 
			- Split at spaces
			- Make sure starting direction is n, e, s, or w
			- Convert to all lowercase
		- Line 2:
			- Pass to Rover instance to be read
			- Convert to all lowercase

- Divide up the input into properties of an object
	- Group the input for each rover separately

- For each rover's instructions that were input:
	- Create a new Rover instance
		- Pass the initial position input to the constructor
	- Parse the movement commands
